library(dplyr)
x <- c(2.0,2.0,2.0,2.5,2.5,3.0,4.0,4.0,4.5,4.5,4.5,4.5)
y <- c(1.0,1.5,2.0,1.0,2.0,4.0,1.0,2.5,1.0,1.5,2.5,3.0)
index <- c("p1","p2","p3","p4","p5","p6","p7","p8","p9","p10","p11","p12")
DF <- data.frame(index, x, y, stringsAsFactors=FALSE)
PreviousCentroids <- (DF[c(1,2,3),c("index","x","y")])
iter <-1
repeat{
CurrentCentroids <- PreviousCentroids
Distance <- apply(CurrentCentroids,1,function(CurrentCentroids)
(apply(DF,1,function(DF,CurrentCentroids)
dist(rbind(DF,CurrentCentroids)),CurrentCentroids)))
Distance <- data.frame(Distance)
cols <- c("p1","p2","p3")
colnames(Distance) <- cols
Distance$Clusters <- colnames(Distance)[apply(Distance,1,which.min)]
Distance$index <-index
DF2 <- merge(DF, Distance, by="index")
DF2 <- DF2 %>%
select(index,x, y, p1, p2, p3, Clusters) %>% group_by(Clusters)
PreviousCentroids <-  DF2 %>%  summarise(x = mean(x),
y = mean(y))
iter <- iter +1
if (all(CurrentCentroids == PreviousCentroids)) {
break
}
}
knitr::opts_chunk$set(
eval = TRUE,
echo = TRUE,
message = FALSE,
warning = FALSE
)
# -> Hinweise sollten nur am Ende zum Rendern auf FALSE gesetzt werden
library(tidyverse)
library(stringr)
library(magrittr)
version
version
knitr::opts_chunk$set(echo = TRUE,
eval = TRUE,
warning = FALSE,
message = FALSE)
library(stringr)
library(readr)
library(dplyr)
# (Adapt Path)
StudentDF <- read_csv(str_c(dirname(getwd()), "/Exercise6/student_alc.csv"))
gain.function <- function(GiniTar,s_var){
g = GiniTar - s_var
return(g)
}
Ginni.function <- function(DF){
p <<- (apply(DF, 2, function(i) i/sum(i)))
Gin <- 1- (sum(p*p))
return(Gin)
}
main.function<- function(df){
StudentDF <<- df %>% mutate(alc_prob = ifelse(Dalc + Walc >= 6, "alc_p" , "no_alc_p" ))
colnames(StudentDF)[ncol(StudentDF)] <- "TargVar"
TargetList <- as.data.frame(table(StudentDF$TargVar))
TargetList <- data.frame(TargetList[,-1], row.names = TargetList[,1])
GiniTar <- Ginni.function(TargetList)
Student_alc_prob = subset(StudentDF, select= -c(TargVar))
GiniGainList = list()
gini_var <- 0
for (Var in (names(Student_alc_prob))) {
var_df <-count(StudentDF,StudentDF[[Var]],StudentDF$TargVar)
for (var_val in unique(var_df[[1]])) {
temp_df <- subset(var_df,var_df[[1]]==var_val)
a<- dim(StudentDF)
Probablity <- sum(temp_df$n)/a[1]
filtered_df = subset(temp_df, select= -c(1:2))
gini_val <- Ginni.function(filtered_df)*Probablity
gini_var <- gini_var+ gini_val
}
gini_gain <- gain.function(GiniTar,gini_var)
GiniGainList[[Var]] <- gini_gain
gini_var <- 0
gini_val<- 0
gini_gain<-0
}
TotalGinni<- do.call(rbind, GiniGainList)
}
main.function(StudentDF)
colnames(StudentDF)[ncol(StudentDF)] <- "TargVar"
TargetList <- as.data.frame(table(StudentDF$TargVar))
TargetList <- data.frame(TargetList[,-1], row.names = TargetList[,1])
GiniTar <- Ginni.function(TargetList)
Student_alc_prob = subset(StudentDF, select= -c(TargVar))
GiniGainList = list()
gini_var <- 0
for (Var in (names(Student_alc_prob))) {
var_df <-count(StudentDF,StudentDF[[Var]],StudentDF$TargVar)
for (var_val in unique(var_df[[1]])) {
temp_df <- subset(var_df,var_df[[1]]==var_val)
a<- dim(StudentDF)
Probablity <- sum(temp_df$n)/a[1]
filtered_df = subset(temp_df, select= -c(1:2))
gini_val <- Ginni.function(filtered_df)*Probablity
gini_var <- gini_var+ gini_val
}
gini_gain <- gain.function(GiniTar,gini_var)
GiniGainList[[Var]] <- gini_gain
gini_var <- 0
gini_val<- 0
gini_gain<-0
}
TotalGinni<- do.call(rbind, GiniGainList)
}
View(TotalGinni)
shiny::runApp('RoCS-VA/rocs_visual_analytics-master')
runApp('RoCS-VA/rocs_visual_analytics-master')
runApp('RoCS-VA/rocs_visual_analytics-master')
runApp('RoCS-VA/rocs_visual_analytics-master')
install.packages("meltt")
devtools::install_github("css-konstanz/meltt")
version
installed.packages("dplyr")
library(dplyr)
library(tidyverse)
devtools::install_github("tidyverse/tidyverse")
library(tidyverse)
cran_pkgs <- c("remotes",
"tidymodels",
"gapminder",
"patchwork",
"showtext",
"ggthemes",
"ggrepel",
"socviz",
"ggiraph",
"ggforce",
"janitor",
"rpart",
"rpart.plot",
"kknn",
"rmarkdown",
"knitr",
"rticles",
"xaringan",
"Hmisc",
"kableExtra")
install.packages(cran_pkgs)
install.packages(cran_pkgs)
github_pcks <- c("rstudio/gt",
"gadenbuie/countdown")
remotes::install_github(github_pcks)
install.packages(tinytex)
tinytex::install_tinytex()
install.packages(tinytex)
install.packages("tinytex")
install.packages("tinytex")
old.packages()
update.packages()
old.packages()
update.packages()
old.packages()
update.packages()
getwd()
old.packages()
update.packages()
version
setwd("~/VersionControl/Git/DataScienceWithR---Market-Research/ProposalMarkdown")
